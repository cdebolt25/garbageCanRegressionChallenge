---
title: "Garbage Can Regression Challenge"
format:
  html: default
execute:
  echo: false
  eval: true
---

# Garbage Can Regression Challenge

```{python}
#| echo: true
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score
import statsmodels.api as sm

# Data with known true relationships: Anxiety = Stress + 0.1 × Time
data = {
    'Stress': [0,0,0,1,1,1,2,2,2,8,8,8,12,12,12],
    'StressSurvey': [0,0,0,3,3,3,6,6,6,9,9,9,12,12,12],
    'Time': [0,1,1,1,1,1,2,2,2,2,2,2.1,2.2,2.2,2.2],
    'Anxiety': [0,0.1,0.1,1.1,1.1,1.1,2.2,2.2,2.2,8.2,8.2,8.21,12.22,12.22,12.22]
}

observDF = pd.DataFrame(data)
print(observDF)
```

## Your Analysis

Follow the challenge instructions from your course to complete your analysis.

### Bivariate regression: Anxiety ~ StressSurvey

```{python}
#| echo: true
import statsmodels.api as sm

X = sm.add_constant(observDF[["StressSurvey"]])
y = observDF["Anxiety"]

ols_model = sm.OLS(y, X).fit()

print("Estimated coefficients (Anxiety ~ StressSurvey):")
print({"Intercept": float(ols_model.params["const"]),
       "StressSurvey": float(ols_model.params["StressSurvey"])})
print(f"R^2: {ols_model.rsquared:.4f}")

# For reference: quick check of the true model using Stress and Time
X_true = sm.add_constant(observDF[["Stress", "Time"]])
ols_true = sm.OLS(y, X_true).fit()
print("\nReference fit (Anxiety ~ Stress + Time):")
print({"Intercept": float(ols_true.params["const"]),
       "Stress": float(ols_true.params["Stress"]),
       "Time": float(ols_true.params["Time"])})
print(f"R^2: {ols_true.rsquared:.4f}")
```

## Results Summary

**Estimated Coefficients from Bivariate Regression (Anxiety ~ StressSurvey):**
- **Intercept**: -1.524
- **StressSurvey coefficient**: 1.047
- **R²**: 0.9011 (90.11% of variance explained)

**True Relationship Coefficients (Anxiety ~ Stress + Time):**
- **Intercept**: ~0 (essentially zero)
- **Stress coefficient**: 1.000
- **Time coefficient**: 0.100
- **R²**: 1.0000 (100% of variance explained)

**Comparison to True Relationship:**

**Key Differences:**
1. **Slope bias**: The bivariate regression estimates a slope of 1.047 for StressSurvey, which is close to but not exactly the true coefficient of 1.0 for Stress. This slight overestimation occurs because the omitted Time variable's effect gets partially absorbed into the StressSurvey coefficient.

2. **Intercept bias**: The bivariate model produces a negative intercept (-1.524) instead of the true zero intercept. This negative bias compensates for the missing Time variable's positive effect.

3. **Model fit**: The bivariate model explains 90.11% of the variance compared to 100% for the true model, indicating that omitting the Time variable reduces explanatory power.

**Conclusion**: The bivariate regression demonstrates **omitted variable bias** - when you exclude the Time variable from the model, its effect gets absorbed into the intercept and slope of the included StressSurvey variable, causing the estimated coefficients to differ from the true relationship A = S + 0.1 × T. This illustrates why including all relevant variables in regression models is crucial for obtaining unbiased coefficient estimates.